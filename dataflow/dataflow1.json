{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_ouput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_sink_venkat",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "ds_sink_venkat",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "ds_sink_venkat",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          State_code as string,",
				"          Table_number as string,",
				"          Effective_date as string,",
				"          Exp_date as string,",
				"          Terr_code as string,",
				"          Amount as string,",
				"          Deductible as string,",
				"          Symbol as string,",
				"          Factor as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source2 split(Table_number=='73.#1',",
				"     Table_number==\"73.#2\",",
				"     disjoint: false) ~> split1@(tablenumber731, tablenumber1, tablenumber732)",
				" sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          State_code as string,",
				"          Table_number as string,",
				"          Effective_date as string,",
				"          Exp_date as string,",
				"          Terr_code as string,",
				"          Amount as string,",
				"          Deductible as string,",
				"          Symbol as string,",
				"          Factor as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"split1@tablenumber731 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          State_code as string,",
				"          Table_number as string,",
				"          Effective_date as string,",
				"          Exp_date as string,",
				"          Terr_code as string,",
				"          Amount as string,",
				"          Deductible as string,",
				"          Symbol as string,",
				"          Factor as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2",
				"split1@tablenumber1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          State_code as string,",
				"          Table_number as string,",
				"          Effective_date as string,",
				"          Exp_date as string,",
				"          Terr_code as string,",
				"          Amount as string,",
				"          Deductible as string,",
				"          Symbol as string,",
				"          Factor as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3",
				"split1@tablenumber732 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          State_code as string,",
				"          Table_number as string,",
				"          Effective_date as string,",
				"          Exp_date as string,",
				"          Terr_code as string,",
				"          Amount as string,",
				"          Deductible as string,",
				"          Symbol as string,",
				"          Factor as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink4"
			]
		}
	}
}